//
//  CardView.swift
//  MouhdonTest
//
//  Created by shuruq alshammari on 18/06/1446 AH.
//
import SwiftUI
import AVFoundation

struct CardView: View {
    var card: Card
    @State private var audioPlayer: AVAudioPlayer? // (1) ูุชุบูุฑ ูุชุดุบูู ุงูุตูุช
    @State private var isPlaying = false // (2) ุญุงูุฉ ุงูุชุดุบูู
    @State private var showEditScreen = false // (3) ูุชุบูุฑ ูุนุฑุถ ุดุงุดุฉ ุงูุชุนุฏูู
    var isEditMode: Bool // (4) ุชุญุฏูุฏ ุฅุฐุง ูุงู ูู ูุถุน ุงูุชุนุฏูู ุฃู ูุง

    var body: some View { // (5) ุชุนุฑูู ููุน ุงูุฅุฑุฌุงุน ุจู some View
        ZStack { // (6) ุงุณุชุฎุฏุงู ZStack ูุชุฏุงุฎู ุงููุญุชูู
            VStack {
                Text(card.emoji) // (7) ุนุฑุถ ุงูุฑูุฒ ุงููุตู (emoji)
                    .font(.system(size: 50))
                Text(card.cardDescription) // (8) ุนุฑุถ ูุตู ุงููุงุฑุฏ
                    .font(.body)
                    .padding(.top, 5)
                    .multilineTextAlignment(.center)
            }
            .padding()
            .frame(width: 400, height: 240) // (9) ุชุญุฏูุฏ ุญุฌู ุงูุจุทุงูุฉ
            .background(Image("GrayLibrary") // (10) ุงุณุชุฎุฏุงู ุตูุฑุฉ ุฎูููุฉ
                .resizable()
                .scaledToFill()
                .clipped()
            )
            .padding(.bottom, 10)

            // (11) ุฅุธูุงุฑ ุฃุฒุฑุงุฑ ุงูุชุนุฏูู ูุงูุญุฐู ููุท ูู ูุถุน ุงูุชุนุฏูู
            if isEditMode {
                HStack {
                    Spacer()
                    // ุฒุฑ ุงูุชุนุฏูู
                    Button(action: {
                        showEditScreen = true // (12) ุชูุนูู ุดุงุดุฉ ุงูุชุนุฏูู ุนูุฏ ุงูุถุบุท
                    }) {
                        Image(systemName: "pencil")
                            .foregroundColor(.blue)
                            .padding()
                            .background(Color.white)
                            .clipShape(Circle())
                            .shadow(radius: 5)
                    }
                    .padding(10)

                    // ุฒุฑ ุงูุญุฐู
                    Button(action: {
                        deleteCard() // (13) ุงุณุชุฏุนุงุก ุฏุงูุฉ ุงูุญุฐู
                    }) {
                        Image(systemName: "trash")
                            .foregroundColor(.red)
                            .padding()
                            .background(Color.white)
                            .clipShape(Circle())
                            .shadow(radius: 5)
                    }
                    .padding(10)
                }
            }
        }
        .onTapGesture { // (14) ุชุดุบูู ุงูุตูุช ุนูุฏ ุงูุถุบุท ุนูู ุงูุจุทุงูุฉ
            if !isEditMode { // (15) ุงูุตูุช ูุนูู ููุท ุฅุฐุง ูู ููู ูู ูุถุน ุงูุชุนุฏูู
                playAudio(for: card)
            }
        }
        .sheet(isPresented: $showEditScreen) { // (16) ุนุฑุถ ุดุงุดุฉ ุงูุชุนุฏูู
            NewCard(cards: .constant([])) // (17) ุดุงุดุฉ ุงูุชุนุฏูู (ูููู ุฑุจุทูุง ุจุงููุงุฑุฏ ูุงุญููุง)
        }
    }

    func playAudio(for card: Card) { // (18) ุชุดุบูู ุงูุตูุช ุนูุฏ ุงูุทูุจ
        guard let audioPath = card.audioFilePath else { return } // (19) ุงูุชุญูู ูู ูุฌูุฏ ุงููุณุงุฑ ุงูุตูุชู
        let fileURL = URL(fileURLWithPath: audioPath)
        do {
            audioPlayer = try AVAudioPlayer(contentsOf: fileURL) // (20) ุชููุฆุฉ ูุดุบู ุงูุตูุช
            audioPlayer?.play() // (21) ุชุดุบูู ุงูุตูุช
            isPlaying = true
            DispatchQueue.main.asyncAfter(deadline: .now() + (audioPlayer?.duration ?? 0)) {
                isPlaying = false // (22) ุชุญุฏูุซ ุญุงูุฉ ุงูุชุดุบูู ุจุนุฏ ุงูุชูุงุก ุงูุตูุช
            }
        } catch {
            print("Error playing audio: \(error.localizedDescription)") // (23) ุงูุชุนุงูู ูุน ุงูุฃุฎุทุงุก
        }
    }

    func deleteCard() { // (24) ูุธููุฉ ูุญุฐู ุงููุงุฑุฏ
        print("Card deleted: \(card.id)") // (25) ููุง ููููู ุงุณุชุจุฏุงููุง ุจููุทู ุงูุญุฐู ุงููุนูู
    }
}

struct CardView_Previews: PreviewProvider {
    static var previews: some View {
        // (26) ุจูุงูุงุช ุงุฎุชุจุงุฑ (Mock Data)
        let mockCard = Card(
            emoji: "๐ต",
            cardDescription: "This is a sample card description.",
            audioFilePath: Bundle.main.path(forResource: "sample", ofType: "mp3") // ุงุณู ููู ุงูุตูุช ุงูุชุฌุฑูุจู
        )

        // (27) ุชูุฑูุฑ ุจูุงูุงุช ุงูุงุฎุชุจุงุฑ ุฅูู CardView
        return CardView(card: mockCard, isEditMode: true)
            .previewDevice("iPad Pro (12.9-inch) (6th generation)") // (28) ุงููุญุงูู ุงููุทููุจ
    }
}
